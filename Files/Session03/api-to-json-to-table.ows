<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script" position="(37.0, 87.0)" />
		<node id="1" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table" position="(248.0, 64.0)" />
		<node id="2" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (1)" position="(70.0, 205.0)" />
		<node id="3" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (2)" position="(191.0, 224.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="1" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="1" source_node_id="2" sink_node_id="1" source_channel="Data" sink_channel="Data" enabled="true" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 1, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\xf7\x00\x00\x00@\x00\x00\x04J\x00\x00\x02d\x00\x00\x00\xf7\x00\x00\x00e\x00\x00\x04J\x00\x00\x02d\x00\x00\x00\x00\x00\x00\x00\x00\x05V\x00\x00\x00\xf7\x00\x00\x00e\x00\x00\x04J\x00\x00\x02d', 'scriptLibrary': [{'name': 'api', 'script': 'import requests\nimport json\n\nurl = "https://community-open-weather-map.p.rapidapi.com/forecast"\n\nquerystring = {"q":"Cairo,EG"}\n\nheaders = {\n    \'x-rapidapi-key\': "2a9769dc82msh399ea7c7313cd01p1c533cjsne440d55603bb",\n    \'x-rapidapi-host\': "community-open-weather-map.p.rapidapi.com"\n    }\n\nresponse = requests.request("GET", url, headers=headers, params=querystring)\n\n\n\np = json.loads(response.text)\nprint(p)', 'filename': None}, {'name': 'New script', 'script': 'import requests\nimport json\n\nurl = "https://community-open-weather-map.p.rapidapi.com/forecast"\n\nquerystring = {"q":"Cairo,EG"}\n\nheaders = {\n    \'x-rapidapi-key\': "2a9769dc82msh399ea7c7313cd01p1c533cjsne440d55603bb",\n    \'x-rapidapi-host\': "community-open-weather-map.p.rapidapi.com"\n    }\n\nresponse = requests.request("GET", url, headers=headers, params=querystring)\n\n\n\np = json.loads(response.text)\nprint(p["list"][2]["main"])', 'filename': None}], 'scriptText': 'import requests\nimport json\n\nurl = "https://community-open-weather-map.p.rapidapi.com/forecast"\n\nquerystring = {"q":"Cairo,EG"}\n\nheaders = {\n    \'x-rapidapi-key\': "2a9769dc82msh399ea7c7313cd01p1c533cjsne440d55603bb",\n    \'x-rapidapi-host\': "community-open-weather-map.p.rapidapi.com"\n    }\n\nresponse = requests.request("GET", url, headers=headers, params=querystring)\n\n\n\np = json.loads(response.text)\nprint(p)', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00f\x00\x00\x00f\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="1" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xbe\x00\x00\x00\x1b\x00\x00\x04\xf0\x00\x00\x023\x00\x00\x02\xbe\x00\x00\x00@\x00\x00\x04\xf0\x00\x00\x023\x00\x00\x00\x00\x00\x00\x00\x00\x05V\x00\x00\x02\xbe\x00\x00\x00@\x00\x00\x04\xf0\x00\x00\x023', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="2" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 4, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\x02\x00\x00\x00A\x00\x00\x05U\x00\x00\x02e\x00\x00\x02\x02\x00\x00\x00f\x00\x00\x05U\x00\x00\x02e\x00\x00\x00\x00\x00\x00\x00\x00\x05V\x00\x00\x02\x02\x00\x00\x00f\x00\x00\x05U\x00\x00\x02e', 'scriptLibrary': [{'name': 'Hello world', 'script': "print('Hello world')\n", 'filename': None}, {'name': 'New script', 'script': "from lxml import etree\n \ndata = open('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/XSLT sample_to CSV.xslt')\nxslt_content = data.read()\nxslt_root = etree.XML(xslt_content)\n\ndom = etree.parse('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/XML sample.xml')\ntransform = etree.XSLT(xslt_root)\n\nresult = transform(dom)\n\n\nf = open('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/output01.csv', 'w')\nf.write(str(result))\nf.close()", 'filename': None}, {'name': 'arff', 'script': "from lxml import etree\n \ndata = open('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/XSLT sample_to CSV.xslt')\nxslt_content = data.read()\nxslt_root = etree.XML(xslt_content)\n\ndom = etree.parse('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/XML sample.xml')\ntransform = etree.XSLT(xslt_root)\n\nresult = transform(dom)\n\n\nf = open('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/output01.csv', 'w')\nf.write(str(result))\nf.close()", 'filename': None}, {'name': 'New script', 'script': 'import requests\nimport json\n\nurl = "https://community-open-weather-map.p.rapidapi.com/forecast"\n\nquerystring = {"q":"Cairo,EG"}\n\nheaders = {\n    \'x-rapidapi-key\': "2a9769dc82msh399ea7c7313cd01p1c533cjsne440d55603bb",\n    \'x-rapidapi-host\': "community-open-weather-map.p.rapidapi.com"\n    }\n\nresponse = requests.request("GET", url, headers=headers, params=querystring)\n\n\n\np = json.loads(response.text)\nprint(p["list"][2]["main"]["humidity"])\n# convert to csv\n#load csv\n', 'filename': None}, {'name': 'New script', 'script': 'import requests\nimport json\n\nurl = "https://community-open-weather-map.p.rapidapi.com/forecast"\n\nquerystring = {"q":"Cairo,EG"}\n\nheaders = {\n    \'x-rapidapi-key\': "2a9769dc82msh399ea7c7313cd01p1c533cjsne440d55603bb",\n    \'x-rapidapi-host\': "community-open-weather-map.p.rapidapi.com"\n    }\n\nresponse = requests.request("GET", url, headers=headers, params=querystring)\n\n\n\np = json.loads(response.text)\nprint(p["list"][2]["main"]["humidity"])\n# convert to csv\n#load csv\n', 'filename': None}], 'scriptText': 'from selenium import webdriver\n\nfrom selenium.webdriver.common.keys import Keys\ndriver = webdriver.Chrome("/opt/chromedriver")\nurl = "https://openweathermap.org/city/360630"\ndriver.get(url)\nTemp_xpath = "//*[@id=\\"weather-widget\\"]/div[2]/div[1]/div[1]/div[2]/div[1]/span"\nfds = driver.find_elements_by_xpath(Temp_xpath)\n\nprint(fds[0].text)', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00f\x00\x00\x00f\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="3" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 2, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\xf7\x00\x00\x00@\x00\x00\x04J\x00\x00\x02d\x00\x00\x00\xf7\x00\x00\x00e\x00\x00\x04J\x00\x00\x02d\x00\x00\x00\x00\x00\x00\x00\x00\x05V\x00\x00\x00\xf7\x00\x00\x00e\x00\x00\x04J\x00\x00\x02d', 'scriptLibrary': [{'name': 'Hello world', 'script': "print('Hello world')\n", 'filename': None}, {'name': 'New script', 'script': "from lxml import etree\n \ndata = open('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/XSLT sample_to CSV.xslt')\nxslt_content = data.read()\nxslt_root = etree.XML(xslt_content)\n\ndom = etree.parse('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/XML sample.xml')\ntransform = etree.XSLT(xslt_root)\n\nresult = transform(dom)\n\n\nf = open('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/output01.csv', 'w')\nf.write(str(result))\nf.close()", 'filename': None}, {'name': 'arff', 'script': "from lxml import etree\n \ndata = open('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/XSLT sample_to CSV.xslt')\nxslt_content = data.read()\nxslt_root = etree.XML(xslt_content)\n\ndom = etree.parse('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/XML sample.xml')\ntransform = etree.XSLT(xslt_root)\n\nresult = transform(dom)\n\n\nf = open('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/output01.csv', 'w')\nf.write(str(result))\nf.close()", 'filename': None}], 'scriptText': "from lxml import etree\n \ndata = open('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/XSLT sample_to CSV.xslt')\nxslt_content = data.read()\nxslt_root = etree.XML(xslt_content)\n\ndom = etree.parse('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/XML sample.xml')\ntransform = etree.XSLT(xslt_root)\n\nresult = transform(dom)\n\n\nf = open('/home/mohamed/Github/ITI-DataPrepExp/Files/Session01/XSLT/output01.csv', 'w')\nf.write(str(result))\nf.close()", 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00f\x00\x00\x00f\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
